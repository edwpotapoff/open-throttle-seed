pekko {
  loglevel = "DEBUG" # Log level (e.g., "INFO", "DEBUG")

  actor {
    provider = cluster

    serialization-bindings {
      "io.ot.CborSerializable" = jackson-cbor
    }

    # Dispatcher used for blocking operations like JDBC or file access
    default-blocking-io-dispatcher {
      type = "Dispatcher"
      executor = "thread-pool-executor"
      throughput = 1

      thread-pool-executor {
        fixed-pool-size = 16
      }
    }
  }

  remote {
    artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }

  cluster {
    seed-nodes = [
      "pekko://ClusterSystem@127.0.0.1:25251"
      # , "pekko://ClusterSystem@127.0.0.1:25252"
    ]

    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
  }
}

pekko.grpc.client."*" {
  # netty or pekko-http (experimental)
  backend = "netty"

  # Host to use if service-discovery-mechanism is set to static or grpc-dns
  host = ""

  service-discovery {
    mechanism = "static"
    # Service name to use if a service-discovery.mechanism other than static or grpc-dns
    service-name = ""
    # See https://pekko.apache.org/docs/pekko-management/current/discovery/index.html for meanings for each mechanism
    # if blank then not passed to the lookup
    port-name = ""
    protocol = ""

    # timeout for service discovery resolving
    resolve-timeout = 1s
  }

  # port to use if service-discovery-mechanism is static or service discovery does not return a port
  port = 0

  # Experimental in grpc-java https://github.com/grpc/grpc-java/issues/1771
  # pick_first or round_robin
  load-balancing-policy = ""

  deadline = infinite
  override-authority = ""
  user-agent = ""
  # Location on the classpath of CA PEM to trust
  trusted = ""
  use-tls = true
  # SSL provider to use:
  # leave empty to auto-detect, or configure 'jdk' or 'openssl'.
  ssl-provider = ""

  # TODO: Enforce HTTP/2 TLS restrictions: https://tools.ietf.org/html/draft-ietf-httpbis-http2-17#section-9.2

  # The number of times to try connecting before giving up.
  # '-1': means retry indefinitely, '0' is invalid, '1' means fail
  # after the first failed attempt.
  # When load balancing we don't count individual connection
  # failures, so in that case any value larger than '1' is also
  # interpreted as retrying 'indefinitely'.
  connection-attempts = 20

  # Service discovery mechanism to use. The default is to use a static host
  # and port that will be resolved via DNS.
  # Any of the mechanisms described in https://pekko.apache.org/docs/pekko-management/current/discovery/index.html can be used
  # including Kubernetes, Consul, AWS API
}


ot {
  percentile = [80, 90, 95, 99] # List of percentiles to calculate

  strictTamplateStr = false # String templates $ can be without {}

  # Timeout for node response to weight request. If response takes longer, node is ignored
  client.node.timeout = 2 s

  # If script duration exceeds pacing multiplied by this factor, log a warning
  pacing.warn-threshold = 1.5

  # Error if variable not found
  noVarError = true

  gatlingHome = "gatling-charts-highcharts-bundle-3.10.5"

  influx {
    enable = false
    url = "http://localhost:8086/"
    #username
    #password
    db = "ot"
    measurement = "jmeter"
  }

  cacheMaxCapacity {
    regex  = 200 # Cache size for compiled regex patterns; set to 0 to disable caching

    xpath  = 200 # Cache size for compiled XPath queries; set to 0 to disable caching

    jsonPath  = 200 # Cache size for compiled JSONPath queries; set to 0 to disable caching

    css = 200 # Currently not used
  }
}